name: Code Review on Pull Request

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review_code:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Get changed files
      id: changed-files-yaml
      uses: tj-actions/changed-files@v39
      with:
        files_yaml: |
          src:
            - ./*

    # Run code review on changed files and accumulate the output for all files
    - name: Run code review on changed files
      id: review
      run: |
        export OPEN_API_NEW_KEY=${{ secrets.OPEN_API_NEW_KEY }}
        IFS=' ' read -ra files <<< "${{ steps.changed-files-yaml.outputs.src_all_changed_files }}"
        reviews=""
        for file in "${files[@]}"; do
            output=$(python create_unit_test.py "$file")
            
            # Debug statement to print the output
            echo "Debug: Output for $file: $output"
            
            # Append to the reviews string
            reviews="$reviews\n$output"
        done
        # Remove any leading newline (from the first iteration)
        reviews=${reviews#\\n}
        echo "::set-output name=review::$reviews"

    # Post the accumulated output as a single comment
    - name: Post review as comment
      uses: actions/github-script@v5
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const output = `${{ steps.review.outputs.review }}`;
          if (output.trim() !== "") {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
          }