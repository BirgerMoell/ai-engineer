name: Code Review on Pull Request

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review_code:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Get list of changed files
      id: getfile
      run: |
        echo "Changed files: $(git diff --name-only ${{ github.event.before }} ${{ github.sha }})"
        echo "::set-output name=files::$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})"
    
    - name: Run code review on changed files
      id: review
      run: |
        export OPEN_API_NEW_KEY=${{ secrets.OPEN_API_NEW_KEY }}
        IFS=$'\n' read -ra files <<< "${{ steps.getfile.outputs.files }}"
        all_output=""
        for file in "${files[@]}"; do
            output=$(python create_unit_test.py "$file")
            echo "Debug: Output for $file: $output"
            all_output="$all_output"$'\n'"$output"
        done
        echo "::set-output name=review::$all_output"

    - name: Display Review Output
      run: |
        echo "Review Output: ${{ steps.review.outputs.review }}"

    - name: Post review as comment
      uses: actions/github-script@v5
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const output = `${{ steps.review.outputs.review }}`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });
